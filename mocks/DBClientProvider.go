// Code generated by mockery v2.33.0. DO NOT EDIT.

package mocks

import (
	db "avito-backend/pkg/gopkg-db"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// DBClientProvider is an autogenerated mock type for the DBClientProvider type
type DBClientProvider struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx
func (_m *DBClientProvider) Execute(ctx context.Context) db.IClient {
	ret := _m.Called(ctx)

	var r0 db.IClient
	if rf, ok := ret.Get(0).(func(context.Context) db.IClient); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.IClient)
		}
	}

	return r0
}

// NewDBClientProvider creates a new instance of DBClientProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDBClientProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *DBClientProvider {
	mock := &DBClientProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
